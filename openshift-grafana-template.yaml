apiVersion: v1
kind: Template
metadata:
  name: grafana
  labels:
    app: grafana
parameters:
- name: GIT_URI
  displayName: Git repository URI
  description: location of the grafana git repo
  value: https://github.com/OpenShiftDemos/grafana-openshift
- description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  displayName: GitHub Webhook Secret
  from: '[a-zA-Z0-9]{40}'
  generate: expression
  name: WEBHOOK_SECRET
- name: VOLUME_SIZE
  displayName: Volume Size
  description: Size of persistent volume used for Grafana datastore
  required: true
  value: 1Gi
- name: DATA_DIR
  displayName: Data directory
  description: Path to Grafana data directory
  required: true
  value: /usr/share/grafana/data
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: grafana
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      deploymentconfig: grafana
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    name: grafana
  spec:
    port:
      targetPort: 3000-tcp
    to:
      kind: Service
      name: grafana
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: grafana
  spec:
    replicas: 1
    selector:
      deploymentconfig: grafana
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: grafana
          app: grafana
      spec:
        containers:
        - env:
          - name: GF_INSTALL_PLUGINS
            value: hawkular-datasource
          - name: DATAD
            value: ${DATA_DIR}
          - name: PLGND
            value: ${DATA_DIR}/plugins
          image: registry.hub.docker.com/grafana/grafana:latest
          imagePullPolicy: Always
          name: grafana
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: ${DATA_DIR}
            name: data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: conf
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - grafana
        from:
          kind: ImageStreamTag
          name: grafana:latest
      type: ImageChange
    - type: ConfigChange
